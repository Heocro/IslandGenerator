//package
package program;

//class
public final class ValueGenerator {
	
	//static attributes
	private static int globalBaseValue = 1;

	//attributes
	private int baseValue = globalBaseValue++;
	private int currentValue;
	private int counter = 10000;
	
	//method
	public int getBaseValue() {
		return baseValue;
	}
	
	//method
	public boolean getTrueForPropability(int probability) {
		updateCurrentValue();
		return ((currentValue % 100) < probability);
	}
	
	//method
	public int getNumberBetweenZeroAndValueIncludingBounds(int value) {
		updateCurrentValue();
		int number = currentValue % (value + 1);
		if (number >= 0) {
			return number;
		}
		return -number;
	}
	
	//method
	private void updateCurrentValue() {		
		if (currentValue < 10000) {
			currentValue = baseValue + 10000;
		}
		if (counter > 1000000) {
			counter = 10000;
		}
		currentValue -= counter++;
		if (currentValue % 2 == 0) {
			currentValue += baseValue % counter;
		}
		else {
			currentValue -= (baseValue % counter) % 1000;
			counter += 3;
		}
	}
}
